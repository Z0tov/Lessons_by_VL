#Задание 1

import pandas as pd
df = pd.read_excel('dataset_lesson2.xlsx')
dfc = list(df.T.to_dict().values())

new_list = []
count = 0
followers_sum = 0
followers_mean = 0
er_sum = 0
er_mean = 0
for row in dfc:
	if count < 1000000:
		new_list.append(row)
		count += row['Followers']

for row in new_list:
	followers_sum += row['Followers']
	followers_mean = followers_sum / len(new_list)
	er_sum += row['ER']
	er_mean = er_sum / len(new_list)

print('Среднее количество подписчиков по новому списку равняется {:.0f}'.format(followers_mean))
print('Среднее значение ER по новому списку равняется {:.3f}'.format(er_mean))

#_________________________________________________________________________________________________
#Задание 2

#Все тоже самое, только отредактировать строку: if count < 1000000 and row['ER'] >= 0.05:

#_________________________________________________________________________________________________
#Задание 3 

#в целом я понимаю какая получилась порнография на выходе, но по-другому не знаю как сделать
#через функцию .split().split(), потому что после первого сплита str преобразуется в list
#каждого сотого тоже не смог выцепить. Понимаю, что это делается через range(len(data)),
#но как объявить в коде range(0, len(data), 100): не придумал.

with open('followers.txt') as file:
	txt = file.read()
for_sort = txt.split('www.instagram.com/')

nickname = []
link = dict()

for i in range(1, len(for_sort)):
	nickname.append(for_sort[i].split('">')[0])

for i in range(1, len(nickname)):
	link[nickname[i]] = 'www.instagram.com/'+ nickname[i]

for row in link.items():
	print(row)
print('Количество уникальных пользователей в файле: {}'.format(len(link)))
	
#_________________________________________________________________________________________________
#Задание 4

#делал очень наспех, голову сломал как тут применить *args или **kwargs
#получились костыли :(

import pandas as pd
df = pd.read_excel('dataset_lesson2.xlsx')
dfc = list(df.T.to_dict().values())

def sub_sum_or_mean_er(*data):
	count = 0
	mean_er = 0
	mean = 0
	if 1 in data and not 2 in data:
		for row in dfc:
			count += row['Followers']
		return count
	elif 2 in data and not 1 in data:
		for row in dfc:
			mean += row['ER']
			mean_er = mean / len(dfc)
		return mean_er
	elif 1 and 2 in data:
		return 'было очень мало времени в течение \
			\nнедели и это лучшее, что я придумал'

count = 'Общее количество подписчиков составляет {}'.format(sub_sum_or_mean_er(1))
mean_er = 'Среднее значение ER составляет {}'.format(sub_sum_or_mean_er(2))
args_result = sub_sum_or_mean_er(1,2)
print(args_result)

