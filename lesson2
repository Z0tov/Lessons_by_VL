#Задание 3 

list_of_dicts = [{'post': 'post 1', 'author': 'author 1', 'followers': 4000, 'likes': 20, 'comments':10}, 
{'post': 'post 2', 'author': 'author 2', 'followers': 5000, 'likes': 50, 'comments':60},
{'post': 'post 3', 'author': 'author 3', 'followers': 6000, 'likes': 70, 'comments':5}]

def print_engagemgent_rate(data):
	for i in data:
		engagement_rate = (i['likes']+i['comments'])/i['followers']
		print('Engagement Rate по {} равен: {}'.format(i['author'], engagement_rate))
print_engagemgent_rate(list_of_dicts)

"""
альтернативное решение с изменением списка словарей (в прошлом варианте не посчитал среднее значение)
"""

mean_er = 0

for i in range(len(list_of_dicts)):
    engagement_rate = (list_of_dicts[i]['likes'] + list_of_dicts[i]['comments']) / list_of_dicts[i]['followers']
    list_of_dicts[i]['ER'] = engagement_rate
    mean_er += list_of_dicts[i]['ER'] / len(list_of_dicts)
    
print('Средний показатель Engagement Rate равен: {:.1%}'.format(mean_er))
#_______________________________________________________________________________________________________________
#Задание 4

list_of_dicts = [{'author': 'kommersant', 'link': 'link 1', 'OTS': 50000, 'type': 'media'}, 
                 {'author': 'vedomosti', 'link': 'link 1', 'OTS': 100000, 'type': 'media'},
                 {'author': 'kommersant', 'link': 'link 1', 'OTS': 20000, 'type': 'VK'},
                 {'author': 'kommersant', 'link': 'link 1', 'OTS': 5000, 'type': 'FB'}]

def print_target_contacts(data):
	for i in range(len(data)):
		ots = data[i]['OTS']
		if data[i]['type'] == 'media':
			tc_media = ots * 0.8 * 0.01
			print('Значение TC по автору {} равно {}.'.format(data[i]['author'], int(tc_media)))
		elif data[i]['type'] == 'VK':
			tc_vk = ots * 0.8 * 0.1
			print('Значение TC по автору {} равно {}.'.format(data[i]['author'], int(tc_vk)))
		elif data[i]['type'] == 'FB':
			tc_fb = ots * 0.8 * 0.3
			print('Значение TC по автору {} равно {}.'.format(data[i]['author'], int(tc_fb)))

print_target_contacts(list_of_dicts)

#хотел бы увидеть как это выглядит, если мне нужно не вывести результаты счета, 
#а добавить результаты в саму таблицу. В теории я понимаю, что нужно было 
#написать код через .append(), но как это делать со словарями?

'''
Нашёл вариант.
'''

def add_target_contacts(data):
    for i in range(len(data)):
        ots = data[i]['OTS']
        if data[i]['type'] == 'media':
            tc_media = ots * 0.8 * 0.01
            data[i]['TC'] = int(tc_media)
        elif data[i]['type'] == 'VK':
            tc_vk = ots * 0.8 * 0.1
            data[i]['TC'] = int(tc_vk)
        elif data[i]['type'] == 'FB':
            tc_fb = ots * 0.8 * 0.3
            data[i]['TC'] = int(tc_fb)

add_target_contacts(list_of_dicts)
print(list_of_dicts)

#_______________________________________________________________________________________________________________

#Задание 5 

import pandas as pd
for_read = open('/Users/krashik/Downloads/ll.txt')
for_split = for_read.read()
splitted_data = for_split.split(' ')
col = ['col']
df = pd.DataFrame(data = splitted_data, columns = col)

users = df[df['col'].str.contains('data-from-id')]

print(users)

#В теории нужно было сплитить текст вот так, чтобы выцепить только правую часть id
#но я столкнулся с проблемой сплитования датафрейма, все время выбивает ошибку
#вот как получилось сплитить без использования пандаса
magic_string = 'Некий Вася решил сделать предзаказ Дьябло. Какой он молодец.'
vasya = magic_string.split('Некий')[-1].split(' решил')[0]
print(vasya)
